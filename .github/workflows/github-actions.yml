name: API Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  API:
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install dependencies in API
        run: |
          cd api
          npm install

      - name: Create .env file if it doesn't exist
        run: |
          cd api
          if [ ! -f .env ]; then
            echo "PORT=${{ secrets.BACKEND_PORT }}" >> .env
            echo "FRONTEND_URL=${{ secrets.FRONTEND_URL }}" >> .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
            echo "JWT_ISSUER=${{ secrets.JWT_ISSUER }}" >> .env
            echo "JWT_SUBJECT=${{ secrets.JWT_SUBJECT }}" >> .env
            echo "JWT_AUDIENCE=${{ secrets.JWT_AUDIENCE }}" >> .env
            echo "JWT_EXPIRESIN=${{ secrets.JWT_EXPIRESIN }}" >> .env
            echo "JWT_ALGORITHM=${{ secrets.JWT_ALGORITHM }}" >> .env
            echo "MAILGUN_API_KEY=${{ secrets.MAILGUN_API_KEY }}" >> .env
            echo "MAILGUN_DOMAIN=${{ secrets.MAILGUN_DOMAIN }}" >> .env
            # ... (other variables)
            echo "EMAIL_FROM=${{ secrets.EMAIL_FROM }}" >> .env
          fi

      - name: Build API
        run: |
          cd api
          npm run build
          
      - name: Start API
        run: |
          cd api
          pm2 restart apiServer
      
  APP:
    needs: API
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install dependencies in App
        run: |
          cd app
          npm install

      - name: Create .env file if it doesn't exist
        run: |
          cd app
          if [ ! -f .env ]; then
            echo "REACT_APP_GRAPHQL_URL=${{ secrets.REACT_APP_GRAPHQL_URL }}" >> .env
            echo "REACT_APP_LANDING_PAGE=${{ secrets.REACT_APP_LANDING_PAGE }}" >> .env
            echo "REACT_APP_STRIPE_PUBLIC_KEY=${{ secrets.REACT_APP_STRIPE_PUBLIC_KEY }}" >> .env
            echo "REACT_APP_GOOGLE_CLIENT_KEY=${{ secrets.REACT_APP_GOOGLE_CLIENT_KEY }}" >> .env
            echo "REACT_APP_DOMAIN=${{ secrets.REACT_APP_DOMAIN }}" >> .env
            echo "PORT=${{ secrets.FRONTEND_PORT }}" >> .env
          fi

      - name: Build App
        run: |
          cd app
          CI=false npm run build
        env:
          REACT_APP_GOOGLE_CLIENT_KEY: ${{ secrets.REACT_APP_GOOGLE_CLIENT_KEY }}
          REACT_APP_GRAPHQL_URL: ${{ secrets.REACT_APP_GRAPHQL_URL }}

      - name: Start frontend Server
        run: |
          cd app
          pm2 restart frontendServer